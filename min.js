'use strict';var _extends=Object.assign||function(e){for(var h,g=1;g<arguments.length;g++)for(var j in h=arguments[g],h)Object.prototype.hasOwnProperty.call(h,j)&&(e[j]=h[j]);return e};const _=exports;_.nil=void 0,_.isArray=Array.isArray,_.is=(e,g)=>typeof e===g,_.isNil=e=>e==_.nil,_.notNil=e=>e!=_.nil,_.isObject=e=>_.notNil(e)&&_.is(e,'object'),_.isEqual=(e,g)=>[e,g].every(_.isObject)?Object.is(e,g):e===g,_.isFalse=e=>_.isEqual(e,!1),_.isFalsy=e=>_.isNil(e)||_.isFalse(e),_.complement=e=>(...g)=>_.isFalsy(e(...g)),_.isTruthy=_.complement(_.isFalsy),_.isString=e=>_.is(e,'string'),_.isNumber=e=>_.is(e,'number'),_.isBoolean=e=>_.is(e,'boolean'),_.isUndefined=e=>_.is(e,'undefined'),_.isNull=e=>null===e,_.isPlainObject=e=>'[object Object]'===Object.prototype.toString.call(e),_.not=_.isFalsy,_.partial=(e,...g)=>(...h)=>e(...[...g,...h]),_.partialRight=(e,...g)=>(...h)=>e(...[...h,...g]),_.clone=e=>_.isArray(e)?[...e].map(_.clone):_.isObject(e)?Object.entries(_extends({},e)).reduce((g,[h,j])=>(g[h]=_.clone(j),g),{}):e,['fill','push','reverse','unshift','splice'].forEach((e,g)=>_[e]=(h,...j)=>(g=_.clone(h)||[],[][e].apply(g,j),g)),['concat','join','slice','every','filter','find','findIndex','forEach','map','reduce','reduceRight','some'].forEach(e=>_[e]=(g,...h)=>[][e].apply(_.clone(g)||[],h.map(_.clone))),['entries','keys','values'].forEach(e=>_[e]=g=>_.isArray(g)?[...[][e].apply(g||[])]:Object[e](g)),['pop','shift'].forEach(e=>_[e]=g=>_.clone(g)[e]()),['includes','indexOf','lastIndexOf'].forEach(e=>_[e]=(g,h)=>g[e](h)),_.sort=(e,g)=>_.clone(e).sort(_.every(e,_.isNumber)?(h,j)=>h-j:g),_.and=(...e)=>_.reduce(e,(g,h)=>_.isFalsy(g)?g:h),_.or=(...e)=>_.reduce(e,(g,h)=>_.isFalsy(g)?h:g),_.isEqiv=(e,g)=>{if([e,g].every(_.isObject)){const h=_.keys(e);if(h.length!=_.keys(g).length)return!1;for(;h.length;){let j=h.pop();if(e[j]!==g[j])return!1}return!0}return e==g},_.pipe=(e,...g)=>(...h)=>_.reduce(g,(j,l)=>l(j),e(...h)),_.compose=(...e)=>(g=>(...h)=>_.pipe(...g)(...h))(_.reverse([...e])),_.isEmpty=e=>_.isArray(e)||_.isString(e)?!e.length:_.isObject(e)?!Object.keys(e).length:_.isNil(e),_.castPath=e=>{if(_.isArray(e))return[...e];const g=(''+e).split(''),h=[];let j='',l=0;const s=u=>(h.push(/^[0-9]+$/.test(u)?+u:u),j='');for(;l<g.length;)if(['.','[',']'].includes(g[l])){if(0==l++)continue;']'!==g[l-2]&&s(j)}else if(['\'','"'].includes(g[l])){for(let u=g[l++];g[l]!==u;)'\\'===g[l]&&(j+=g[l++]),j+=g[l++];l++}else j+=g[l++];return j.length&&s(j),h},_.get=(e,g,h)=>_.pipe(_.castPath,_.partialRight(_.reduce,(j,l)=>_.isObject(j)&&j[l]||_.nil,e))(g)||h,_.has=(e,g)=>_.pipe(_.isNil,_.not)(_.get(e,g)),_.walkPath=(e,g,h,j=!1)=>{const l=_.castPath(g),s=null==e?_.isNumber(l[0])?[]:{}:j?e:_.clone(e)||{};for(let u=s;l.length;){let w=l.shift(),y=l[0];h(u,w,y),null!=y&&(u=u[w])}return s},_.assoc=(e,g,h,j=!1)=>_.walkPath(e,g,(l,s,u)=>_.isNil(u)?l[s]=h:l[s]=_.clone(_.isNil(l[s])&&_.isNumber(u)?[]:l[s])||{},j),_.dissoc=(e,g,h=!1)=>_.walkPath(e,g,(j,l,s)=>_.isNil(s)?_.isArray(j)?j.splice(_.isNil(s),j.length):delete j[l]:j[l]=_.clone(j[l])||{},h),_.set=_.partialRight(_.assoc,!0),_.drop=_.partialRight(_.dissoc,!0),_.assign=Object.assign,_.merge=(...e)=>_.reduce(e,(g,h)=>{return _.forEach(_.entries(h),([j,l])=>{_.isObject(l)?g[j]=_.merge(g[j]||(_.isArray(l)?[]:{}),l):_.notNil(l)&&(g[j]=l)}),g});